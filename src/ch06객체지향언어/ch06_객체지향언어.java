package ch06객체지향언어;

public class ch06_객체지향언어 {
    // 등장이유 - 80년 초 소프트웨어의 위기 - 빠른 변화를 못쫓아감.
    // 변화에 맞춰 변화하기 위해 사용.
    // 해결책으로 객체지향 언어를 도입함.(절차적 -> 객체지향)
    // 코드의 재사용성이 높고 유지보수가 용이, 중복 코드 제거 기능 있음.
    // 객체지향 언어 = 프로그래밍 언어 + 객체지향개념(규칙)

    // 객체 작업 oop(object-oriented program)
    // 1. 캡슐화
    // 2. 상속
    // 3. 추상화
    // 4. 다형성성

    // 어떻게 공부 해야합니까.? 객체지향 언어요.
    // 6장을 반복해서 보라, 두 세 번 반복하고 7장으로 넘어가세요.
    // 7장이 어려움, 다형성, 추상화, 인터페이스

    // 객체지향 언어 = 프로그래밍 언어 + 객체지향개념(규칙)
    // 이걸 이해 못하면 왜 에러가 났는지 알 수 없음.
    // 객체지향개념 규칙은 굉장히 중요하다.
    // 규칙이 왜 생겼는가? 이런거 묻지마 ㅋㅋ 실습을 많이 해봐.
    // 규칙은 그냥 외워 생각하지마.
    // A4 용지 놓고 외우셈. A4용지 두 장 나옴.
    // 요약해놓고 존나 보고 계속 보셈
    // 이거 하면 기초편 많이 이해됨, 더 하고 싶으면 3편 봐라.
    // 기초편은 최소한의 핵심을 설명한것, 3편은 응용이 들어갔다.
    // 내용 기초편 60%, 3편 100% 다른 책 안봐도 됨.
    // 웹에 관심이 많다? JSP, SPRING 으로 웹사이트 블로그 만들어라.
    // 자바를 배우고 끝내지 말고 뭘 만들어야 실력이 는다.
    // 객체지향을 이해한 정도로만은 암것도 못해
    // 설계를 잘하려면 코딩 경험이 많아야해
    // 코딩 시행착오로 코드를 어떻게 구성하는게 좋다는 경험이 많아야해.
    // 개념서 보지말고 실습을 해.



}
